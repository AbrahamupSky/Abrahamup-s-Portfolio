---
import Django from './icons/Django.astro'
import Bootstrap from './icons/Bootstrap.astro'
import Tailwind from './icons/Tailwind.astro'
import NextJS from './icons/NextJS.astro'
import Python from './icons/Python.astro'
import SQLite from './icons/SQLite.astro'
import HTMLIcon from './icons/HTML.astro'
import CSSIcon from './icons/CSS.astro'
import JavaScriptIcon from './icons/JS.astro'
import JQuery from './icons/JQuery.astro'

const TAGS = {
  Django: {
    name: 'Django',
    class: 'bg-green-700 text-white',
    icon: Django,
  },

  Python: {
    name: 'Python',
    class: 'bg-white/10 text-white',
    icon: Python,
  },

  SQLite: {
    name: 'SQLite',
    class: 'bg-blue-400 text-white',
    icon: SQLite,
  },

  Bootstrap: {
    name: 'Bootstrap',
    class: 'bg-purple-500 text-white',
    icon: Bootstrap,
  },

  Tailwind: {
    name: 'Tailwind',
    class: 'bg-sky-500 text-white',
    icon: Tailwind,
  },

  NextJS: {
    name: 'NextJS',
    class: 'bg-black text-white',
    icon: NextJS,
  },

  HTML: {
    name: 'HTML',
    class: 'bg-orange-500 text-white',
    icon: HTMLIcon,
  },

  CSS: {
    name: 'CSS',
    class: 'bg-sky-400 text-white',
    icon: CSSIcon,
  },

  JavaScript: {
    name: 'JavaScript',
    class: 'bg-yellow-500 text-white',
    icon: JavaScriptIcon,
  },

  JQuery: {
    name: 'JQuery',
    class: 'bg-blue-500 text-white',
    icon: JQuery,
  }
}

const PROJECTS = [
  {
    title: '- CompuDesk',
    description:
      'Application focused on the registration of customers and workers for a crane company, in which it is possible to see the address or location of the customer who requested the crane so that the operator can arrive, as well as to mark the work as completed and upload an image.',
    link: '#',
    github: '#',
    image: '/projects/CompuDesk.jpg',
    tags: [TAGS.Django, TAGS.Bootstrap, TAGS.SQLite],
  },
  {
    title: '- ComputerForms MX',
    description: "Application of logs and machines of the company with their characteristics, manuals and comments, this application also has a QR generator to print and paste them on the machines and thus be able to access all the information of the machine, requires a login for internal security of the company.",
    link: 'https://plai.mx/directorio',
    image: '/projects/infomachines.png',
    tags: [TAGS.Django, TAGS.Bootstrap, TAGS.SQLite],
  },
  {
    title: '- PLAi Tenders',
    description:
      'Development of a web application for the control of tenders, reflecting the changes in real time in a table that the user could see, filtering by years, categories, etc.',
    image: '/projects/tendersPlai.png',
    tags: [TAGS.Django, TAGS.Bootstrap, TAGS.SQLite, TAGS.JQuery],
  },
  {
    title: '- Innovation and Development Open Platform (PLAi) - Not in use anymore',
    description: "Static web page which displays PLAi's team and who is with which leader, it also shows the title that represents them within the company and the e-mails of the leaders.",
    link: 'https://plai.mx/directorio',
    image: '/projects/directoryPlai.jpg',
    tags: [TAGS.HTML, TAGS.CSS, TAGS.JavaScript],
  },
]
---

<div class='flex flex-col gap-y-16'>
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class='flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0'>
        <div class='w-full md:w-1/2'>
          <div class='relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50'>
            <img
              alt='Photo of the project'
              class='object-cover object-top w-full h-56 duration-500 sm:h-full md:scale-110 md:group-hover:scale-105'
              loading='lazy'
              src={image}
            />
          </div>
        </div>

        <div class='w-full md:w-1/2 md:max-w-lg'>
          <h3 class='text-2xl font-semibold text-yellow-200 mb-2'>
            {title}
          </h3>
          <div class='flex flex-wrap mt-2'>
            <ul class='flex flex-row mb-2 gap-x-2'>
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                  >
                    <tag.icon class='size-4' />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class='text-sm mb-4 text-pretty'>
              {description}
            </div>
          </div>
        </div>
      </article>
    ))
  }
</div>